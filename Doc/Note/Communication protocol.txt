=========================================
             PASSWORD WALLET             
           COMMUNICATION PROTOCOL          

Version 1.0 - Last edited on 30/10/17
By Thomas Chevalier (c) 2017
All rights reserved.
=========================================

Introduction
------------

The pc and the device can communicate through a virtual serial port, emulated by the device itself.
The pc send all the command, the device only respond to the command.
Command are shown below.

Description
-----------

The pc is the master of the communication. The device send data only if the pc has sent a command.
A command is constructed as the following :

|--------|----------|--------------|
|   ID   |   SIZE   |     DATA     |
|--------|----------|--------------|
| 1 Byte |  2 Bytes | [Size] bytes |

When the pc send a command the device read the id and the size field and then can execute the command before all the data arrived.
The device always respond to a command by another command. It can be a simple "OK" or a more complex message.
Except for GET_VERSION command the device does not respond to the computer unless it has received the INIT command.


Type of command
---------------

See src/Communication/Commands.h

|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|           Command             |   ID   |                                                  Description
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|        Acknowledge (OK)       |  0x00  | The device can respond with an OK command to show that the command has been received and processed without error
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|    Error : not initialized    |  0x01  | The device returns this error if it receives a command without being in communication state
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|       Init communication      |  0x02  | When the device receive this command and the communication is not initialized, it switches to communication state
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|       End communication       |  0x03  | When the device receive this command and the communication is initialized, it switch to main state and end all transfers
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|       Error : Unavaible       |  0x04  | This error indicates that a asked ressource is not available, for example when the computer ask for the key when the device is locked
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|        Error : Bad key        |  0x05  | This error indicates that the computer send the wrong key to unlock the device and therefore the device is still locked
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|            Timeout            |  0x06  | The computer can send this command when the device take too long to respond
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|           Get Fram            |  0x10  | Request the device to send all the content of the fram
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|           Set Fram            |  0x20  | The pc send a fram index and an array of byte and the device must write it to the fram, to address [index]
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|            Get Key            |  0x11  | Request the device to send the main KEY
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|            Set Key            |  0x21  | The pc send 16 byte and the device interpret those byte as the main key (and check the key against the hash)
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|         Get parameter         |  0x12  | Request the device to send the fram identifier followed by a byte set to 0 if STORE_SCREEN_BUFFER_IN_FRAM is not defined, anything else otherwise
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|          Get version          |  0x13  | Request the device to send a byte indicating the internal software version
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|            Fram               |  0x30  | The device sends this command along with the content of the fram, as requested with command GET_FRAM
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|             Key               |  0x31  | The device sends this command along with the content of the key, as requested with command GET_KEY
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|            Param              |  0x32  | The device sends this command along with the parameters, as requested with command GET_PARAM
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------
|           Version             |  0x33  | The device sends this command along with the version of the software, as requested with command GET_VERSION
|-------------------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------



















